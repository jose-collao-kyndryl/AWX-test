---
- name: Validar Prerrequisitos en Servidores Windows via Jumphost (ssh -L)
  hosts: servidores_windows_via_jump
  gather_facts: false
  serial: 1
  pre_tasks:
    - name: "TUNNEL: Mostrar parámetros para {{ inventory_hostname }}"
      ansible.builtin.debug:
        msg: "TUNNEL DEBUG: LocalPort={{ local_tunnel_port_for_ssh_command }}, TargetIP={{ target_actual_ip }}, TargetPort={{ target_actual_winrm_port }}, JumpUser={{ jumphost_user }}, JumpIP={{ jumphost_ip }}"
      delegate_to: localhost

    - name: "TUNNEL: Estableciendo túnel SSH para {{ inventory_hostname }}"
      ansible.builtin.command: >
        ssh -f -N -L {{ local_tunnel_port_for_ssh_command }}:{{ target_actual_ip }}:{{ target_actual_winrm_port }}
        -o StrictHostKeyChecking=no
        -o UserKnownHostsFile=/dev/null
        -o ExitOnForwardFailure=yes
        -o ServerAliveInterval=60 
        -o ConnectTimeout=15
        {{ jumphost_user }}@{{ jumphost_ip }}
      delegate_to: localhost
      changed_when: false
      register: tunnel_setup_status
      failed_when: "tunnel_setup_status.rc != 0 and 'Address already in use' not in tunnel_setup_status.stderr and 'already forwarding port' not in tunnel_setup_status.stderr"

    - name: "TUNNEL: Esperar a que el puerto local {{ local_tunnel_port_for_ssh_command }} esté activo para {{ inventory_hostname }}"
      ansible.builtin.wait_for:
        host: 127.0.0.1
        port: "{{ local_tunnel_port_for_ssh_command }}"
        timeout: 20
        delay: 3 
        state: started
      delegate_to: localhost
      when: tunnel_setup_status.rc == 0

  tasks:
    - name: "VALIDACIÓN WINDOWS: Conectividad WinRM y ejecución de 'hostname' en {{ inventory_hostname }}"
      ansible.windows.win_command: hostname
      register: windows_hostname_validation
      changed_when: false
      when: tunnel_setup_status.rc == 0
      tags:
        - windows_prereq_check
    - name: "VALIDACIÓN WINDOWS: Resultado para {{ inventory_hostname }}"
      ansible.builtin.debug:
        msg: "PRERREQUISITOS WINDOWS OK para {{ inventory_hostname }} ({{ target_actual_ip }}). Hostname: {{ windows_hostname_validation.stdout }}"
      when: 
        - tunnel_setup_status.rc == 0
        - windows_hostname_validation is defined
        - windows_hostname_validation.rc == 0
      tags:
        - windows_prereq_check
  post_tasks:
    - name: "TUNNEL: Bloque para asegurar la terminación del túnel para {{ inventory_hostname }}"
      delegate_to: localhost
      block:
        - name: "TUNNEL: Debug - Limpiando túnel para {{ inventory_hostname }}"
          ansible.builtin.debug:
            msg: "Limpiando túnel: LocalPort={{ local_tunnel_port_for_ssh_command }} -> TargetIP={{ target_actual_ip }}"
      always:
        - name: "TUNNEL: Intentar terminar túnel SSH específico para {{ inventory_hostname }}"
          ansible.builtin.command: >
            pkill -f "ssh .* -L {{ local_tunnel_port_for_ssh_command }}:{{ target_actual_ip }}:{{ target_actual_winrm_port }}.*{{ jumphost_user }}@{{ jumphost_ip }}"
          changed_when: false
          failed_when: false 
