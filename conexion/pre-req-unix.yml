---
- name: Validar Prerrequisitos en Servidores Unix (con gather_facts)
  hosts: "{{ dispositivos_finales }}"
  gather_facts: true
  become: false

  tasks:
    - name: "UNIX CHECKS: 1. Mostrar información de Python usada por Ansible"
      ansible.builtin.debug:
        msg:
          - "Host: {{ inventory_hostname }}"
          - "Ansible está usando Python en: {{ ansible_python_interpreter | default('No detectado') }}"
          - "Versión de Python usada por Ansible: {{ ansible_python_version | default('No detectada') }}"
          - "Detalles de ansible_python: {{ ansible_python | default('No detectado') }}"
    - name: "UNIX CHECKS: 2. Validar conectividad SSH y ejecución básica (hostname)"
      ansible.builtin.command: hostname
      register: unix_hostname_output
      changed_when: false
      failed_when: unix_hostname_output.rc != 0
    - name: "UNIX CHECKS: Resultado de hostname"
      ansible.builtin.debug:
        msg: "Hostname en {{ inventory_hostname }}: {{ unix_hostname_output.stdout }}. Conexión SSH al puerto {{ ansible_port | default(22) }} OK."
    - name: "UNIX CHECKS: 3. Verificar instalación de Perl"
      ansible.builtin.command: perl -v
      register: perl_check_output
      ignore_errors: true
      changed_when: false
    - name: "UNIX CHECKS: Resultado de Perl"
      ansible.builtin.debug:
        msg: |
          Host: {{ inventory_hostname }}
          Perl Encontrado: {{ 'Sí' if perl_check_output.rc == 0 else 'No (o error al ejecutar perl -v)' }}
          Salida (stderr usualmente): {{ perl_check_output.stderr if perl_check_output.stderr else perl_check_output.stdout }}
          RC: {{ perl_check_output.rc }}
